{"version":3,"sources":["components/Navigation.js","utils/axiosWithAuth.js","components/Login.js","components/CreateAccount.js","components/NewTicket.js","components/NewComments.js","components/TicketList.js","actions/index.js","components/Comments.js","components/PrivateRoutes.js","App.js","reducers/ticketReducer.js","index.js"],"names":["Navigation","useState","dropdownOpen","setDropdownOpen","Nav","tabs","NavItem","NavLink","href","active","Dropdown","nav","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","tag","Link","to","className","axiosWithAuth","token","localStorage","getItem","Axios","create","baseURL","headers","Authorization","schema","yup","shape","username","required","password","authLevel","oneOf","Login","useForm","resolver","yupResolver","register","handleSubmit","errors","onSubmit","loginData","post","then","res","console","log","setItem","data","catch","err","error","message","htmlFor","placeholder","id","name","data-cy","type","ref","first_name","last_name","CreateAccount","props","newUser","axios","response","title","description","steps_taken","category","status","creator_id","NewTicket","formState","setFormState","ticketData","newTicket","NewComments","ticket","useRouteMatch","params","comment","user_id","ticket_id","newComment","newComments","comments","connect","state","tickets","getAllTickets","dispatch","get","payload","setTickets","useEffect","Table","map","scope","Button","Comments","setComments","ListGroup","ListGroupItem","PrivateRoute","Component","component","routeProps","render","App","exact","path","TicketList","initialState","ticketReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.79ec14ef.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Nav, NavItem, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n//The goal of this nav is to be simple. It will have one link to the home page and then a dropdown for user/admin stuff (login, tickets, etc.)\r\n\r\nconst Navigation = () => {\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink href=\"./\" active>Home</NavLink>\r\n        </NavItem>\r\n        <Dropdown nav isOpen={dropdownOpen} toggle={toggle}>\r\n          <DropdownToggle nav caret>\r\n            Menu\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n              <DropdownItem tag={Link} to='/login'>Login</DropdownItem>\r\n              <DropdownItem tag={Link} to='/create_account'>Create Account</DropdownItem>\r\n              <DropdownItem tag={Link} to='/new_ticket'>Create New Ticket</DropdownItem>\r\n              <DropdownItem tag={Link} to='/view_tickets'>View Open Tickets</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n        <h2 className='logo'>DevDesk Queue</h2>\r\n      </Nav>\r\n    \r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Navigation","import Axios from 'axios';\r\n\r\nconst axiosWithAuth = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    return Axios.create({\r\n        baseURL: \"https://devdesklambda.herokuapp.com/api\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\nexport default axiosWithAuth;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport * as yup from 'yup'\r\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\r\n\r\nconst schema = yup.object().shape({\r\n\r\n  username: yup.string().required('Please enter a valid username'),\r\n  password: yup.string().required('Please enter a valid password'),\r\n  authLevel: yup.string().oneOf(['Student', 'Administrator'])\r\n\r\n})\r\n\r\nconst Login = () => {\r\n\r\n    const [ loginData, setLoginData ] = useState(\r\n        {\r\n            username: \"\",\r\n            password: \"\",\r\n            authLevel: \"\"\r\n        }\r\n    )\r\n\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = loginData => {\r\n        axiosWithAuth()\r\n            .post(\"/auth/login\", loginData)\r\n            .then(res => {\r\n                console.log('MJM: Login.js: Response from Login', res)\r\n                localStorage.setItem(\"token\", res.data.token)\r\n                return <Redirect to='/view_tickets' />\r\n\r\n            })\r\n            .catch(err =>\r\n                console.error(\"mjm: Login.js: login: err.message: \", err.message)\r\n            );\r\n  }\r\n\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      {/*USERNAME*/}\r\n      <label htmlFor='username'></label>\r\n      <input\r\n        placeholder='Username'\r\n        id='username'\r\n        name='username'\r\n        data-cy='username'\r\n        type='text'\r\n        ref={register({ required: true})}\r\n      /> \r\n      {<p>{errors.username?.message}</p>}\r\n\r\n\r\n      {/*PASSWORD*/}\r\n      <label htmlFor='password'></label>\r\n      <input\r\n        placeholder='Password'\r\n        id='password'\r\n        name='password'\r\n        data-cy='password'\r\n        type='password'\r\n        ref={register({ required: true})}\r\n      />\r\n      {<p>{errors.password?.message}</p>}\r\n\r\n\r\n      {/*Auth Level*/}\r\n      <label htmlFor='authLevel'>Login As:</label>\r\n      <select id='authLevel' name='authLevel' data-cy='authLevel' ref={register({})}>\r\n        <option>Student</option>\r\n        <option>Administrator</option>\r\n      </select> \r\n\r\n\r\n\r\n      <button type='submit' data-cy='submit'>Login</button>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default Login","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport * as yup from 'yup'\r\n\r\n//Actions\r\nimport {POST_REGISTRATION, POST_REGISTRATION_FAILURE, POST_REGISTRATION_SUCCESS, postNewUser} from '../actions/index'\r\nimport axios from \"axios\";\r\n\r\nconst schema = yup.object().shape({\r\n\r\n  username: yup.string().required('Please enter a valid username'),\r\n  password: yup.string().required('Please enter a valid password'),\r\n    first_name: yup.string().required('Please enter your first name'),\r\n    last_name: yup.string().required('Please enter your last name'),\r\n\r\n})\r\n\r\nconst CreateAccount = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = newUser => {\r\n      axios\r\n          .post(\"https://devdesklambda.herokuapp.com/api/auth/register\", newUser)\r\n          .then(res => {\r\n              console.log(\"MJM : Create Ticket : Successful\", res)\r\n              // dispatch({type: POST_REGISTRATION_SUCCESS, payload: res.data })\r\n          })\r\n          .catch(err => {\r\n              console.log(\"MJM : Create Ticket : Err\", err.response)\r\n              //dispatch({type: POST_REGISTRATION_FAILURE, payload: err.response })\r\n          })\r\n  }\r\n\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      {/*USERNAME*/}\r\n      <label htmlFor='username'></label>\r\n      <input\r\n        placeholder='Username'\r\n        id='username'\r\n        name='username'\r\n        data-cy='username'\r\n        type='text'\r\n        ref={register({ required: true})}\r\n      /> \r\n      {<p>{errors.username?.message}</p>}\r\n\r\n      <label htmlFor='first_name'></label>\r\n      <input\r\n        placeholder='First Name'\r\n        id='first_name'\r\n        name='first_name'\r\n        data-cy='first_name'\r\n        type='text'\r\n        ref={register({ required: true})}\r\n      />\r\n      {<p>{errors.last_name?.message}</p>}\r\n\r\n      <label htmlFor='last_name'></label>\r\n      <input\r\n        placeholder='Last Name'\r\n        id='last_name'\r\n        name='last_name'\r\n        data-cy='last_name'\r\n        type='text'\r\n        ref={register({ required: true})}\r\n      />\r\n      {<p>{errors.last_name?.message}</p>}\r\n\r\n\r\n      {/*PASSWORD*/}\r\n      <label htmlFor='password'></label>\r\n      <input\r\n        placeholder='Password'\r\n        id='password'\r\n        name='password'\r\n        data-cy='password'\r\n        type='password'\r\n        ref={register({ required: true})}\r\n      />\r\n      {<p>{errors.password?.message}</p>}\r\n\r\n\r\n      {/*Auth Level*/}\r\n      <label htmlFor='role'>Create Account For:</label>\r\n      <select id='role' name='role' data-cy='role' ref={register({})}>\r\n        <option>1</option>\r\n        <option>2</option>\r\n      </select> \r\n\r\n\r\n\r\n      <button type='submit' data-cy='submit'>Create</button>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user,\r\n        errorData: state.err\r\n    }\r\n}\r\n\r\nconst mapDispatch = {\r\n        POST_REGISTRATION,\r\n        POST_REGISTRATION_SUCCESS,\r\n        POST_REGISTRATION_FAILURE\r\n}\r\n\r\n\r\n// export default connect(\r\n//     mapDispatch,\r\n//     mapStateToProps,{\r\n//     postNewUser\r\n// }\r\n// ) (CreateAccount)\r\n\r\nexport default CreateAccount;","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport * as yup from 'yup'\r\nimport axios from 'axios';\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\n\r\nconst schema = yup.object().shape({\r\n\r\n  title: yup.string().required('Please enter a title'),\r\n  description: yup.string().required('Please enter a description'),\r\n  steps_taken: yup.string().required('Please enter steps you have taken to resolve the issue yourself'),\r\n  category: yup.string().oneOf(['HTML', 'CSS', 'Less / Sass', 'Javascript', 'React', 'IDE Issues', 'Other']).required('Please Select a Category'),\r\n  status: yup.string(),\r\n  creator_id: yup.number()\r\n})\r\n\r\nconst NewTicket = () => {\r\n\r\n  const[formState, setFormState] = useState({\r\n    title: '',\r\n    description: '',\r\n    steps_taken: '',\r\n    category: '',\r\n    status: 'Open',\r\n    creator_id: 1\r\n  })\r\n\r\n  console.log(formState)\r\n\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  console.log(errors)\r\n\r\n  const onSubmit = ticketData => {\r\n\r\n    const newTicket = {...formState, ...ticketData}\r\n    \r\n\r\n    axiosWithAuth()\r\n      .post('/tickets/submit', newTicket)\r\n      .then(data => {\r\n        console.log(newTicket)\r\n        setFormState({\r\n          title: '',\r\n          description: '',\r\n          steps_taken: '',\r\n          category: '',\r\n          status: 'Open',\r\n          creator_id: 1\r\n        })\r\n      })\r\n      .catch(error => console.log('SUBMIT ERROR: ', error.response))\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      {/*TITLE*/}\r\n      <label htmlFor='title'></label>\r\n      <input\r\n        placeholder='Title'\r\n        id='title'\r\n        name='title'\r\n        data-cy='title'\r\n        type='text'\r\n        ref={register({ required: true})}\r\n      /> \r\n      {<p>{errors.title?.message}</p>}\r\n\r\n\r\n      {/*DESCRIPTION*/}\r\n      <label htmlFor='description'></label>\r\n      <textarea\r\n        placeholder='Description'\r\n        id='description'\r\n        name='description'\r\n        data-cy='description'\r\n        type='text'\r\n        ref={register({ required: true})}\r\n      />\r\n      {<p>{errors.description?.message}</p>}\r\n\r\n      {/*steps_taken*/}\r\n      <label htmlFor='steps_taken'></label>\r\n      <textarea\r\n        placeholder=\"I've tried...\"\r\n        id='steps_taken'\r\n        name='steps_taken'\r\n        data-cy='steps_taken'\r\n        type='text'\r\n        ref={register({ required: true})}\r\n      />\r\n      {<p>{errors.steps_taken?.message}</p>}\r\n\r\n\r\n      {/*CATEGORY*/}\r\n      <label htmlFor='category'>Category:</label>\r\n      <select id='category' name='category' data-cy='category' ref={register({})}>\r\n        <option>--Select a Category--</option>\r\n        <option>HTML</option>\r\n        <option>CSS</option>\r\n        <option>Less / Sass</option>\r\n        <option>Javascript</option>\r\n        <option>React</option>\r\n        <option>IDE Issues</option>\r\n        <option>Other</option>\r\n      </select> \r\n\r\n\r\n\r\n      <button type='submit' data-cy='submit'>Submit</button>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default NewTicket","import React, { useState, useEffect } from 'react';\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\n\r\n\r\nconst NewComments = () => {\r\n\r\n\r\n const routeMatch = useRouteMatch()\r\n const ticket = routeMatch.params\r\n\r\n\r\n\r\n const [formState, setFormState] = useState({\r\n   comment: '',\r\n   user_id: ticket.creator_id,\r\n   ticket_id: ticket.ticket_id\r\n })\r\n\r\n\r\n const { register, handleSubmit, errors } = useForm({})\r\n\r\n\r\n const onSubmit = newComment => {\r\n\r\n  const newComments = {...formState, comment: newComment}\r\n\r\n  axiosWithAuth()\r\n  .post('/tickets/submit/comment', newComments)\r\n  .then(newComment => {\r\n    console.log(newComment)\r\n    setFormState({\r\n      comments: '',\r\n      user_id: ticket.creator_id,\r\n      ticket_id: ticket.ticket_id\r\n    })\r\n  })\r\n  .catch(error => console.log('SUBMIT COMMENT ERROR: ', error.response))\r\n\r\n }\r\n\r\n\r\n return(\r\n\r\n  <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n    <label htmlFor='comment'>New Comments</label>\r\n    <textarea\r\n      id='comment'\r\n      name='comment'\r\n      type='text'\r\n      ref={register({ required: false})}\r\n      />\r\n\r\n      <button type='submit'>Submit</button>\r\n  </form>\r\n )\r\n\r\n\r\n}\r\n\r\n\r\nexport default NewComments","import React, { useState, useEffect } from 'react'\r\nimport { Table } from 'reactstrap';\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\nimport NewComments from './NewComments'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'reactstrap'\r\nimport {connect} from \"react-redux\";\r\nimport {getAllTickets} from \"../actions\";\r\n\r\n\r\nconst TicketList = (props) => {\r\n\r\n  const [tickets, setTickets] = useState([])\r\n\r\n  console.log('TICKES: ', tickets)\r\n\r\n\r\n  const getTickets = () => {\r\n\r\n    axiosWithAuth()\r\n      .get('/tickets')\r\n      .then(response => {\r\n        setTickets(response.data)\r\n        console.log('RESPONSE FOR TICKETS: ', response)\r\n      })\r\n      .catch(error => {\r\n        console.log('ERROR: ', error)\r\n      })\r\n\r\n  }\r\n  useEffect(getTickets, [])\r\n\r\n\r\n  \r\n\r\n\r\n  return(\r\n\r\n    \r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Ticket ID</th>\r\n          <th>Category</th>\r\n          <th>Title</th>\r\n          <th>Description</th>\r\n          <th>Steps Taken</th>\r\n          <th>Creator</th>\r\n          <th>Status</th>\r\n          <th>Comments</th>\r\n        </tr>\r\n      </thead>\r\n        {tickets.map(ticket => {\r\n          return(\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">{ticket.id}</th>\r\n              <td>{ticket.category}</td>\r\n              <td>{ticket.title}</td>\r\n              <td>{ticket.description}</td>\r\n              <td>{ticket.steps_taken}</td>\r\n              <td>{ticket.creator_id}</td>\r\n              <td>{ticket.status}</td>\r\n              <td>\r\n              <Button tag={Link} to={`/new_comments/${ticket.id}/${ticket.creator_id}`}>New</Button>\r\n              <Button tag={Link} to={`/view_comments/${ticket.id}/${ticket.creator_id}`}>View</Button>\r\n              </td>\r\n            </tr>\r\n    \r\n          </tbody>\r\n          )\r\n        })}\r\n      \r\n  </Table>\r\n\r\n  )\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    tickets: state.tickets\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n    {getAllTickets}\r\n) (TicketList)","import axios from 'axios';\r\nimport axiosWithAuth from '../utils/axiosWithAuth'\r\n\r\nexport const FETCH_ALL_TICKETS = \"FETCH_ALL_TICKETS\"\r\nexport const FETCH_ALL_TICKETS_SUCCESS = \"FETCH_ALL_TICKETS_FAILURE\"\r\nexport const FETCH_ALL_TICKETS_FAILURE = \"FETCH_ALL_TICKETS_SUCCESS\"\r\nexport const POST_NEW_TICKET = \"POST_NEW_TICKET\"\r\nexport const POST_NEW_TICKET_SUCCESS = \"POST_NEW_TICKET_SUCCESS\"\r\nexport const POST_NEW_TICKET_FAILURE = \"POST_NEW_TICKET_FAILURE\"\r\nexport const DELETE_TICKET_DATA = \"DELETE_TICKET_DATA\"\r\nexport const DELETE_TICKET_DATA_SUCCESS = \"DELETE_TICKET_DATA_SUCCESS\"\r\nexport const DELETE_TICKET_DATA_FAILURE = \"DELETE_TICKET_DATA_FAILURE\"\r\nexport const UPDATE_TICKET_DATA = \"UPDATE_TICKET_DATA\"\r\nexport const UPDATE_TICKET_DATA_SUCCESS = \"UPDATE_TICKET_DATA_SUCCESS\"\r\nexport const UPDATE_TICKET_DATA_FAILURE = \"UPDATE_TICKET_DATA_FAILURE\"\r\nexport const HELP_TICKET_DATA = \"HELP_TICKET_DATA\"\r\nexport const HELP_TICKET_DATA_SUCCESS = \"HELP_TICKET_DATA_SUCCESS\"\r\nexport const HELP_TICKET_DATA_FAILURE = \"HELP_TICKET_DATA_FAILURE\"\r\nexport const UNHELP_TICKET_DATA = \"UNHELP_TICKET_DATA\"\r\nexport const UNHELP_TICKET_DATA_SUCCESS = \"UNHELP_TICKET_DATA_SUCCESS\"\r\nexport const UNHELP_TICKET_DATA_FAILURE = \"UNHELP_TICKET_DATA_FAILURE\"\r\nexport const FETCH_RESOLVED_TICKET = \"FETCH_RESOLVED_TICKET\"\r\nexport const FETCH_RESOLVED_TICKET_SUCCESS = \"FETCH_RESOLVED_TICKET_SUCCESS\"\r\nexport const FETCH_RESOLVED_TICKET_FAILURE = \"FETCH_RESOLVED_TICKET_FAILURE\"\r\nexport const FETCH_UNRESOLVED_TICKET = \"FETCH_UNRESOLVED_TICKET\"\r\nexport const FETCH_UNRESOLVED_TICKET_SUCCESS = \"FETCH_UNRESOLVED_TICKET_SUCCESS\"\r\nexport const FETCH_UNRESOLVED_TICKET_FAILURE = \"FETCH_UNRESOLVED_TICKET_FAILURE\"\r\n// export const LOGIN = \"LOGIN\"\r\n// export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n// export const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n// export const LOGOUT = \"LOGOUT\"\r\n// export const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\r\n// export const LOGOUT_FAILURE = \"LOGOUT_FAILURE\"\r\nexport const POST_REGISTRATION = \"POST_REGISTRATION\"\r\nexport const POST_REGISTRATION_SUCCESS = \"POST_REGISTRATION_SUCCESS\"\r\nexport const POST_REGISTRATION_FAILURE = \"POST_REGISTRATION_FAILURE\"\r\n\r\nexport const getAllTickets = () => dispatch => {\r\n    dispatch({type: FETCH_ALL_TICKETS})\r\n    axiosWithAuth()\r\n        .get(\"/tickets\")\r\n            .then(res => {\r\n                dispatch({type: FETCH_ALL_TICKETS_SUCCESS, payload: res.data})\r\n                console.log(res, \"MJM: Index.js: Get Data\")\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: FETCH_ALL_TICKETS_FAILURE, payload: err.response })\r\n                console.log(err.response, \"MJM: Index.js: Err\")\r\n            })\r\n}\r\n\r\nexport const getAllResolvedTickets = () => dispatch => {\r\n    dispatch({ type: FETCH_RESOLVED_TICKET})\r\n    axiosWithAuth()\r\n        .get(\"/resolved\")\r\n            .then(res => {\r\n                dispatch({type:FETCH_RESOLVED_TICKET_SUCCESS, payload: res.data})\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: FETCH_RESOLVED_TICKET_FAILURE, payload: err.response})\r\n            })\r\n}\r\n\r\nexport const getAllUnresolvedTickets = () => dispatch => {\r\n    dispatch({type:FETCH_UNRESOLVED_TICKET})\r\n    axiosWithAuth()\r\n        .get(\"/unresolved\")\r\n            .then(res => {\r\n                dispatch({type: FETCH_UNRESOLVED_TICKET_SUCCESS, payload: res.data})\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: FETCH_UNRESOLVED_TICKET_FAILURE, payload: err.response})\r\n            })\r\n}\r\nexport const postNewTicket = newTicket => dispatch => {\r\n    dispatch({type: POST_NEW_TICKET})\r\n    axiosWithAuth()\r\n        .post(\"/tickets/submit\", newTicket)\r\n        .then(res => {\r\n            dispatch({ type: POST_NEW_TICKET_SUCCESS, payload: res.data })\r\n        })\r\n        .catch(err => {\r\n            dispatch({ type: POST_NEW_TICKET_FAILURE, payload: err.response})\r\n        })\r\n}\r\nexport const deleteTicket = ticket => dispatch => {\r\n    dispatch({type: DELETE_TICKET_DATA})\r\n    axiosWithAuth()\r\n        .delete(`/tickets/${ticket.id}`)\r\n        .then(res => {\r\n            dispatch({type: DELETE_TICKET_DATA_SUCCESS, payload: res.data})\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: DELETE_TICKET_DATA_FAILURE, payload: err.response })\r\n        })\r\n}\r\nexport const updateTicketData = editTicket => dispatch => {\r\n    dispatch({type: UPDATE_TICKET_DATA})\r\n    axiosWithAuth()\r\n        .put(`/tickets/${editTicket.id}`, editTicket)\r\n        .then(res => {\r\n            dispatch({type: UPDATE_TICKET_DATA_SUCCESS, payload: res.data })\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: UPDATE_TICKET_DATA_FAILURE, payload: err.response })\r\n        })\r\n}\r\n\r\nexport const postNewUser = newUser => {\r\n    //dispatch({type: POST_REGISTRATION})\r\n    axios\r\n        .post(\"/auth/register\", newUser)\r\n        .then(res => {\r\n           // dispatch({type: POST_REGISTRATION_SUCCESS, payload: res.data })\r\n        })\r\n        .catch(err => {\r\n            //dispatch({type: POST_REGISTRATION_FAILURE, payload: err.response })\r\n        })\r\n}\r\n","import React, { useState, useEffect } from 'react'; \r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\n\r\n\r\n\r\n\r\nconst Comments = () => {\r\n\r\n const routeMatch = useRouteMatch()\r\n const ticket = routeMatch.params\r\n\r\n console.log('TICKET: ', ticket)\r\n\r\n\r\n const [comments, setComments] = useState([])\r\n\r\n\r\n const getComments = () => {\r\n\r\n  axiosWithAuth()\r\n    .get('/tickets/comments')\r\n    .then(response => {\r\n      setComments(response.data)\r\n    })\r\n    .catch(error => {\r\n      console.log('ERROR: ', error)\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\n\r\nuseEffect(getComments, [])\r\n\r\n\r\nconsole.log('COMMENTS: ', comments)\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n    <ListGroup>\r\n      {comments.map(comment => {\r\n        return(\r\n          <ListGroupItem>Ticket ID: {comment.ticket_id} --- Comment:{comment.comment}</ListGroupItem>\r\n        )\r\n      })}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default Comments","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\r\n    return (\r\n        <Route\r\n            {...routeProps}\r\n            render={props => {\r\n                // check to see if we think we have a good token\r\n                if (localStorage.getItem(\"token\")) {\r\n                    return <Component {...props} />;\r\n                } else {\r\n                    return <Redirect to=\"/login\" />;\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\n//Component imports\r\nimport Navigation from './components/Navigation'\r\nimport Login from './components/Login'\r\nimport CreateAccount from './components/CreateAccount';\r\nimport NewTicket from './components/NewTicket';\r\nimport TicketList from './components/TicketList';\r\nimport NewComments from './components/NewComments';\r\nimport Comments from './components/Comments';\r\nimport PrivateRoute from \"./components/PrivateRoutes\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n      <Switch>\r\n        <Route exact path='/' component={Login} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/create_account' component={CreateAccount} />\r\n        <PrivateRoute path='/new_ticket' component={NewTicket} />\r\n        <PrivateRoute path='/view_tickets' component= {TicketList} />\r\n        <PrivateRoute path='/new_comments/:ticket_id/:creator_id' component={NewComments} />\r\n        <PrivateRoute path='/view_comments/:ticket_id/:creator_id' component={Comments} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { FETCH_ALL_TICKETS,\r\n        FETCH_ALL_TICKETS_SUCCESS,\r\n    FETCH_ALL_TICKETS_FAILURE,\r\n        POST_NEW_TICKET,\r\n        POST_NEW_TICKET_SUCCESS,\r\n    POST_NEW_TICKET_FAILURE,\r\n        DELETE_TICKET_DATA,\r\n        DELETE_TICKET_DATA_SUCCESS,\r\n    DELETE_TICKET_DATA_FAILURE,\r\n        UPDATE_TICKET_DATA,\r\n        UPDATE_TICKET_DATA_SUCCESS,\r\n    UPDATE_TICKET_DATA_FAILURE,\r\n        HELP_TICKET_DATA,\r\n    HELP_TICKET_DATA_SUCCESS,\r\n    HELP_TICKET_DATA_FAILURE,\r\n        UNHELP_TICKET_DATA,\r\n    UNHELP_TICKET_DATA_SUCCESS,\r\n    UNHELP_TICKET_DATA_FAILURE,\r\n        FETCH_RESOLVED_TICKET,\r\n    FETCH_RESOLVED_TICKET_SUCCESS,\r\n    FETCH_RESOLVED_TICKET_FAILURE,\r\n        FETCH_UNRESOLVED_TICKET,\r\n    FETCH_UNRESOLVED_TICKET_SUCCESS,\r\n    FETCH_UNRESOLVED_TICKET_FAILURE\r\n        } from '../actions/index';\r\n\r\nexport const initialState = {\r\n        ticket: [],\r\n        error: null\r\n}\r\n\r\nexport function ticketReducer(state = initialState, action) {\r\n        switch (action.type){\r\n                case FETCH_ALL_TICKETS:\r\n                        return{\r\n                                ...state\r\n                        }\r\n\r\n                case FETCH_ALL_TICKETS_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                ticket: action.payload\r\n                        }\r\n\r\n                case FETCH_ALL_TICKETS_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                error: action.payload\r\n                        }\r\n\r\n                case FETCH_RESOLVED_TICKET:\r\n                        return {\r\n                                ...state\r\n                        }\r\n\r\n                case FETCH_RESOLVED_TICKET_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                ticket: action.payload\r\n                        }\r\n\r\n                case FETCH_RESOLVED_TICKET_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                error: action.payload\r\n                        }\r\n\r\n                case FETCH_UNRESOLVED_TICKET:\r\n                        return {\r\n                                ...state\r\n                        }\r\n\r\n                case FETCH_UNRESOLVED_TICKET_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                ticket: action.payload\r\n                        }\r\n\r\n                case FETCH_UNRESOLVED_TICKET_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                error: action.payload\r\n                        }\r\n                        \r\n                case HELP_TICKET_DATA:\r\n                        return {\r\n                                ...state\r\n                        }\r\n\r\n                case HELP_TICKET_DATA_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                ticket: action.payload\r\n                        }\r\n\r\n                case HELP_TICKET_DATA_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                error: action.payload\r\n                        }\r\n                        \r\n                case UNHELP_TICKET_DATA:\r\n                        return {\r\n                                ...state\r\n                        }\r\n\r\n                UNHELP_TICKET_DATA_SUCCESS:\r\n                return {\r\n                                ...state,\r\n                        ticket: action.payload\r\n                }\r\n\r\n                case UNHELP_TICKET_DATA_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                error: action.payload\r\n                        }\r\n                        \r\n                case POST_NEW_TICKET:\r\n                        return {\r\n                                ...state\r\n                        }\r\n\r\n                case POST_NEW_TICKET_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                ticket: action.payload\r\n                        }\r\n\r\n                case POST_NEW_TICKET_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                error: action.payload\r\n                        }\r\n\r\n                case DELETE_TICKET_DATA:\r\n                        return {\r\n                                ...state\r\n                        }\r\n\r\n                case DELETE_TICKET_DATA_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                ticket: action.payload\r\n                        }\r\n\r\n                case DELETE_TICKET_DATA_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                error: action.payload\r\n                        }\r\n                        \r\n                case UPDATE_TICKET_DATA:\r\n                        return {\r\n                                ...state\r\n                        }\r\n\r\n                case UPDATE_TICKET_DATA_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                ticket: action.payload\r\n                        }\r\n\r\n                case UPDATE_TICKET_DATA_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                error: action.payload\r\n                        }\r\n                        \r\n                default: \r\n                        return state\r\n        }\r\n}\r\n\r\nexport default ticketReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { ticketReducer } from './reducers/ticketReducer';\r\n\r\nconst store = createStore(ticketReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}